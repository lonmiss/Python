"""
基本的程序设计模式
    -确定IPO：明确计算部分及功能边界
    -编写程序：将计算求解的设计变成现实
    -调试程序：确保程序按照正确逻辑能够正确运行

模块化设计
    -通过函数或对象封装将程序划分为模块及模块间的表达
    -具体包括：主程序、子程序和子程序间的关系
    -分而治之：一种分而治之，分层抽象、体系化的设计思想

模块化设计
    -紧耦合：两部分之间交流很多，无法独立存储在
    -松耦合：两部分之间的交流较少，可以独立存在
    -模块内部紧耦合，模块之间松耦合

配置化设计
    -引擎+配置：程序执行和配置分离，将可选参数配置化
    -将程序开发变成配置文件编写，扩展功能而不修改程序
    -关键在于接口化设计，清晰明了，灵活可扩展


从应用需求到软件产品：
1、产品的定义：对应用的需求充分理解和明确定义
    产品定义，而不仅是功能定义，要考虑商业模式
2、系统的框架：以系统方式思考产品的技术实现
    系统架构，关注数据流、模块化、体系框架
3、设计与实现：结合架构完成关键设计及系统的而实现
    结合扩展性、灵活性等进行设计优化
4、用户的体验：从用户角度思考应用的效果
    用户至上，体验优先、以用户为中心
"""